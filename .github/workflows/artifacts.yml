name: Deploy Website with artifacts
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  MONGODB_DB_NAME: gha-demo # sample data, its not a good practice to put here the important info
jobs:
  test:
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.15pwqcc.mongodb.net # sample data, its not a good practice to put here the important info
      MONGODB_USERNAME: maximilian # sample data, its not a good practice to put here the important info
      MONGODB_PASSWORD: X34Mqtpg10D8RGTi # sample data, its not a good practice to put here the important info
      PORT: 8080 # sample data
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      # - name: Run server
      #   run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
      # - name: Test code
      #  run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';' # from the outputs
        # run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';' # from the outputs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" # this part has no output because its dont have access in test
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
      - name: Deploy
        run: echo "Deploying..."
